class VendingMachine:
    def __init__(self):
        self.__drinks = {
            "可乐": 3,
            "雪碧": 4,
            "果汁": 5,
        }
        self.__stock = {
            "可乐": 5,
            "雪碧": 7,
            "果汁": 6,
        }
        self.__balance = 0

    def show_drinks(self):
        print("剩余可选饮料：")
        for name in self.__drinks:
            price = self.__drinks[name]
            stock = self.__stock.get(name, 0)
            print(f"{name}-{price}元（剩余{stock}瓶）")

    def recharge(self, amount):
        if amount > 0:
            self.__balance += amount
            print(f"充值成功，当前余额为{self.__balance}元")
        else:
            print("充值金额必须大于0")

    def buy(self, name):
        if name not in self.__drinks:
            print("没有这种饮料")
        elif self.__stock.get(name, 0) <= 0:
            print("该饮料已售完")
        elif self.__balance < self.__drinks[name]:
            print(f"余额不足的，当前剩余余额为：{self.__balance}")
        else:
            self.__balance -= self.__drinks[name]
            self.__stock[name] -= 1
            print(f"购买成功，剩余余额：{self.__balance}")

    def add_drink(self, name, price, quantity):
        if name in self.__drinks:
            self.__stock[name] += quantity
            print(f"已补货{name},库存增加{quantity}")
        else:
            self.__drinks[name] = price
            self.__stock[name] = quantity
            print(f"已添加新饮料：{name}，价格 {price} 元，库存 {quantity} 瓶")

    def show_balance(self):  # ✅ 正确缩进
        print(f"当前余额：{self.__balance} 元")


# 👇👇👇 以下是测试代码 👇👇👇

machine = VendingMachine()  # 创建售货机对象

machine.show_drinks()  # 展示所有饮料和库存
machine.recharge(10)  # 充值 10 元
machine.show_balance()  # 显示当前余额

machine.buy("可乐")  # 购买可乐，价格 3 元
machine.buy("雪碧")  # 购买雪碧，价格 4 元
machine.buy("果汁")  # 购买果汁，价格 5 元
machine.buy("果汁")  # 余额不足时尝试再买果汁

machine.show_balance()  # 显示剩余余额
machine.show_drinks()  # 再次展示饮料，看看库存是否减少

machine.add_drink("奶茶", 6, 4)  # 老板添加新饮料“奶茶”
machine.show_drinks()